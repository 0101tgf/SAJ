unit cJuros;

interface

uses
  FireDAC.Stan.Intf,
  FireDAC.Stan.Option, FireDAC.Stan.Param, FireDAC.Stan.Error, FireDAC.DatS,
  FireDAC.Phys.Intf, FireDAC.DApt.Intf, FireDAC.Comp.DataSet,
  FireDAC.Comp.Client;

type
  TJuros = class
  private
    F_Capital: Currency;
    F_Tx_juros: Currency;
    F_Messes: integer;
    F_Tot_Juros: Currency;
    F_Tot_Pag: Currency;

  public
   constructor Create(pCapital, pTx_Juros:Currency;pMesses:Integer);
   destructor  Destroy; override;
   function    fCalcularPagamentoUnico(out vMemoria:TFDMemTable):Boolean;

  published
  property Capital    :Currency read F_Capital   write F_Capital;
  property Tx_juros   :Currency read F_Tx_juros  write F_Tx_juros;
  property Messes     :integer  read F_Messes    write F_Messes;
  property Tot_Juros  :Currency read F_Tot_Juros write F_Tot_Juros;
  property Tot_Pag    :Currency read F_Tot_Pag   write F_Tot_Pag;
  end;

implementation

{ TJuros }

{$region 'CONSTRUTOR E DESTRUIDOR'}
constructor TJuros.Create(pCapital, pTx_Juros: Currency; pMesses: Integer);
begin

 Capital  := pCapital;
 Tx_juros := pTx_Juros;
 Messes   := pMesses

end;

destructor TJuros.Destroy;
begin

  inherited;
end;
{$endregion}

{$region 'CRUD'}
function TJuros.fCalcularPagamentoUnico(out vMemoria: TFDMemTable): Boolean;
begin



end;
{$endregion}
end.
